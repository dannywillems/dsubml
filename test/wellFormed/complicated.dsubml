let x = { type A = {
    type A : {
      type A : Any -> int.A .. Nothing -> Any
    } .. {
        type A : Any -> Any .. int.A -> Any
      }
  }
};;

(* It's not well formed because it implies to proof
1. Nothing -> Any  <: int.A -> Any, i.e. int.A <: Nothing
2. Any -> Any  <: Any -> int.A, i.e. Any -> int.A
*)
! x.A;;

(* We fix one of the two issues found below. *)
let x = { type A = {
    type A : {
      type A : Any -> int.A .. Any -> Any
    } .. {
        type A : Any -> Any .. int.A -> Any
      }
  }
};;

! x.A;;

(* Another way to fix it *)
let x = { type A = {
    type A : {
      type A : Any -> int.A .. Nothing -> Any
    } .. {
        type A : Any -> Any .. Nothing -> Any
      }
  }
};;

! x.A;;

(* We fix both. *)
let x = { type A = {
    type A : {
      type A : Any -> Any .. Any -> Any
    } .. {
        type A : Any -> Any .. int.A -> Any
      }
  }
};;

x.A;;
